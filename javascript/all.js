// Generated by CoffeeScript 1.7.1
(function() {
  var bane, calcu, calculate, cfe, change_attr, dark, detectPortrait, env, envtxt, getCookie, hide_widget, hp, initialize, j11, menu, operator, opposite, output, pet, petnum, point, profession, sameside, select_attr, select_career, show_widget, sp, spawnstar, star, target, tools, translate;

  j11 = jQuery.noConflict(true);

  j11.fn._position = j11.fn.position;

  j11.fn.position = function(ofobj, vertical) {
    var base_offset, j11ofobj, self;
    self = j11(this);
    if (arguments.length === 0) {
      return self._position();
    } else {
      j11ofobj = j11(ofobj);
    }
    base_offset = j11ofobj.offset();
    base_offset.left += j11ofobj.outerWidth() / 2;
    base_offset.left -= self.outerWidth() / 2;
    if (vertical === 'top') {
      base_offset.top += j11ofobj.outerHeight() / 20;
    } else {
      base_offset.top += j11ofobj.outerHeight() / 2;
      base_offset.top -= self.outerHeight() / 2;
    }
    return self.css(base_offset);
  };

  j11.fn.hasOneOfClasses = function(classes) {
    var result, self;
    self = j11(this);
    result = false;
    switch (j11.type(classes)) {
      case "string":
        return self.hasClass(classes);
      case "array":
        j11.each(classes, function(i, v) {
          if (self.hasClass(v)) {
            return result = true;
          }
        });
        return result != null ? result : false;
      default:
        return false;
    }
  };

  bane = {
    'metal': 'wood',
    'wood': 'earth',
    'earth': 'water',
    'water': 'fire',
    'fire': 'metal'
  };

  translate = {
    'metal': '金',
    'wood': '木',
    'earth': '土',
    'water': '水',
    'fire': '火'
  };

  cfe = ['metal', 'wood', 'earth', 'water', 'fire'];

  calcu = j11('#calcu .modal-content');

  select_career = j11('#select_career .modal-content');

  select_attr = j11('#select_attr .modal-content');

  point = j11('#point .modal-content');

  menu = j11('#menu .modal-content');

  opposite = function(child) {
    if (j11('#half_left').has(child).length) {
      return '#half_right';
    } else {
      return '#half_left';
    }
  };

  sameside = function(child) {
    if (j11('#half_left').has(child).length) {
      return '#half_left';
    } else {
      return '#half_right';
    }
  };

  target = null;

  show_widget = function(wid) {
    return function(e) {
      var modal, self;
      self = j11(this);
      if (self.hasClass('pet-num') && !self.siblings('.pet').children().hasOneOfClasses(cfe)) {
        self.one('click', show_widget(wid));
        return false;
      }
      target = self;
      modal = wid.parent();
      self.css('z-index', 9999);
      if (wid.is(calcu)) {
        wid.removeClass('for-hp for-sp');
        output.text(target.text());
        if (self.hasClass('hp')) {
          wid.addClass('for-hp');
        } else if (self.hasClass('sp')) {
          wid.addClass('for-sp');
        }
      }
      if (self.hasClass('pop-mid')) {
        wid.removeClass('for-star for-env for-pet');
        if (self.hasClass('star')) {
          wid.addClass('for-star');
        } else if (self.hasClass('env')) {
          target = env;
          wid.addClass('for-env');
        } else if (self.hasClass('pet')) {
          wid.addClass('for-pet');
        }
        wid.position(j11('body'), 'top');
      } else if (wid.is(point)) {
        wid.height(self.outerHeight() + wid.children().outerHeight() * 2);
        wid.position(self);
      } else {
        wid.position(opposite(self));
      }
      modal.modal('show');
      modal.one('hidden.bs.modal', function() {
        target = null;
        self.css('z-index', 0);
        return self.one('click', show_widget(wid));
      });
      return self.one('click', hide_widget(wid));
    };
  };

  hide_widget = function(wid) {
    return function(e) {
      var modal;
      modal = wid.parent();
      return modal.modal('hide');
    };
  };

  hp = (j11('.hp')).one('click', show_widget(calcu));

  sp = (j11('.sp')).one('click', show_widget(calcu));

  profession = (j11('.profession')).one('click', show_widget(select_career));

  pet = (j11('.pet')).one('click', show_widget(select_attr));

  petnum = (j11('.pet-num')).one('click', show_widget(point));

  dark = (j11('.dark')).one('click', show_widget(point));

  star = (j11('.star')).one('click', show_widget(select_attr));

  env = (j11('#env')).one('click', show_widget(select_attr));

  envtxt = (j11('#envtxt')).one('click', show_widget(select_attr));

  tools = (j11('#tools')).one('click', show_widget(menu));

  change_attr = function(obj, attr) {
    return obj.removeClass('metal wood water fire earth').addClass(attr);
  };

  getCookie = function(name) {
    var _ref;
    return (_ref = document.cookie.match(name + '=\\w+')) != null ? _ref[0].split('=')[1] : void 0;
  };

  initialize = function() {
    var _ref;
    hp.text((_ref = getCookie('hp_point')) != null ? _ref : 250);
    sp.text('');
    profession.text('無職業');
    pet.children().attr({
      "class": ''
    });
    petnum.text('');
    dark.text('');
    star.children().attr({
      "class": ''
    });
    env.children().attr({
      "class": ''
    });
    change_attr(envtxt, '').text('無');
    return j11('.meteor .spawn').removeClass('spawn').children().fadeTo('slow', 0.5);
  };

  spawnstar = function(div, attr) {
    var op, opattr;
    if (!div.hasClass(attr)) {
      op = j11(opposite(div) + ' .star div');
      opattr = op.attr('class');
      if (bane[attr] === opattr) {
        op.attr({
          "class": ''
        });
      }
      if (attr !== opattr || !attr) {
        div.attr({
          "class": attr
        });
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  };

  output = j11('.output', calcu);

  operator = {
    '+': function(a, b) {
      return a + b;
    },
    '-': function(a, b) {
      return a - b;
    },
    '*': function(a, b) {
      return a * b;
    },
    '/': function(a, b) {
      return Math.floor(a / b);
    }
  };

  calculate = function(s) {
    if (/^([\-\+]?\d+)([\+\*\/\-])([\-\+]?\d+)$/.test(s)) {
      return operator[RegExp.$2](Number(RegExp.$1), Number(RegExp.$3));
    } else if (s) {
      return Number(s);
    } else {
      return '';
    }
  };

  (j11('.num', calcu)).click(function(e) {
    return output.append(j11.trim(e.target.textContent));
  });

  (j11('.op', calcu)).click(function(e) {
    var result;
    result = calculate(output.text());
    if (!isNaN(result)) {
      return output.text(result + j11.trim(e.target.textContent));
    } else {
      return output.append(j11.trim(e.target.textContent));
    }
  });

  (j11('.enter', calcu)).click(function(e) {
    var result;
    result = calculate(output.text());
    output.text(result);
    if (!isNaN(result)) {
      target.text(result);
    }
    return calcu.parent().modal('hide');
  });

  (j11('.btn-danger', calcu)).click(function(e) {
    return output.text(target.text());
  });

  (j11('.btn-default', calcu)).click(function(e) {
    return output.text(output.text().slice(0, -1));
  });

  j11('.meteor > div').click(function() {
    var self;
    self = j11(this);
    if (self.hasClass('spawn')) {
      return self.removeClass('spawn').children().fadeTo('slow', 0.5);
    } else {
      if (spawnstar(j11(sameside(self) + ' .star div'), self.children().attr('class'))) {
        return self.addClass('spawn').children().fadeTo('slow', 1);
      }
    }
  });

  select_attr.find('.btn').click(function(e) {
    var attr, div, _ref;
    div = target.children();
    attr = (j11(e.target)).attr('data-attr');
    if (target.hasClass('star')) {
      spawnstar(div, attr);
    } else {
      div.attr({
        "class": attr
      });
    }
    if (target.hasClass('pet')) {
      if (attr) {
        return target.next().text(2);
      } else {
        return target.next().text('');
      }
    } else if (target.hasClass('env')) {
      return change_attr(envtxt, attr).text((_ref = translate[attr]) != null ? _ref : '無');
    }
  });

  select_career.find('a').click(function(e) {
    var self;
    e.preventDefault();
    self = j11(e.target);
    return target.text(self.text());
  });

  (j11('#point .add')).click(function() {
    var n;
    n = Number(target.text());
    if (!n) {
      return target.text(1);
    } else if (n < 8) {
      return target.text(n + 1);
    }
  });

  (j11('#point .cut')).click(function() {
    var n;
    n = Number(target.text());
    if (1 < n) {
      target.text(n - 1);
    } else {
      target.text('');
    }
    if (!target.text() && target.hasClass('pet-num')) {
      return target.prev().children().attr({
        "class": ''
      });
    }
  });

  (j11('#initi')).click(initialize);

  (j11('#save_setting')).click(function() {
    var v;
    v = (j11('#formhp')).val();
    if (!isNaN(Number(v))) {
      document.cookie = 'hp_point=' + v;
    }
    return (j11('#setwindow')).modal('hide');
  });

  (j11('#setwindow *')).bind('click mouseup mousedown keypress keydown keyup', function(e) {
    if (e.which !== 27 && !(j11(e.target)).hasClass('btn')) {
      return e.stopPropagation();
    }
  });

  tools.popover({
    content: 'Please turn to landscape mode!\n請將螢幕橫置瀏覽！'
  });

  detectPortrait = function() {
    if (innerWidth < innerHeight) {
      return tools.popover('show');
    } else {
      return tools.popover('hide');
    }
  };

  j11(window).resize(detectPortrait);

  detectPortrait();

}).call(this);
